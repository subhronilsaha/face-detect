{"ast":null,"code":"var _jsxFileName = \"/Users/subhronilsaha/Desktop/face-detect/src/App.js\";\nimport React from 'react';\nimport Clarifai from 'clarifai';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Navigation from './Components/Navigation';\nimport SignIn from './Components/Sign In/SignIn';\nimport Register from './Components/Register/Register';\nimport UserScore from './Components/UserScore';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport UserStats from './Components/UserStats';\nimport FaceRecognition from './Components/Face Recognition/FaceRecognition';\nimport bgImg from './assets/bg-img.jpg';\nimport Loader from './Components/Loader';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nconst app = new Clarifai.App({\n  // Clarifai App\n  apiKey: 'edde4e65d57d4ae5b35aeab79b52cfb1'\n});\nconst initialState = {\n  bgImageLoaded: true,\n  route: 'register',\n  isSignedIn: false,\n  input: '',\n  imageUrl: '',\n  boxes: [],\n  faces: 0,\n  user: {\n    id: 0,\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    joined: '',\n    entries: 0\n  }\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.loadUser = userData => {\n      this.setState({\n        user: {\n          id: userData.id,\n          name: userData.name,\n          email: userData.email,\n          joined: userData.joined,\n          entries: userData.entries\n        }\n      });\n      console.log('Current User:', this.state.user);\n    };\n\n    this.onImageLoad = () => {\n      this.setState({\n        bgImageLoaded: true\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.calculateNumberOfFaces = data => {\n      const numberOfFaces = data.outputs[0].data.regions.length;\n      this.setState({\n        faces: numberOfFaces\n      }); //console.log(numberOfFaces);\n\n      return numberOfFaces;\n    };\n\n    this.calculateFaceLocation = (data, index) => {\n      const clarafaiFace = data.outputs[0].data.regions[index].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const imageContainer = document.getElementById('image-container');\n      const imageWidth = Number(image.width);\n      const imageHeight = Number(image.height);\n      const containerWidth = Number(imageContainer.clientWidth);\n      const containerHeight = Number(imageContainer.clientHeight);\n      const offsetX = containerWidth - imageWidth;\n      const offsetY = containerHeight - imageHeight;\n      const padding = 15;\n      console.log(imageHeight, containerHeight, imageWidth, containerWidth);\n      return {\n        leftCol: clarafaiFace.left_col * imageWidth + padding,\n        topRow: clarafaiFace.top_row * imageHeight,\n        rightCol: imageWidth - clarafaiFace.right_col * imageWidth + (offsetX - padding),\n        bottomRow: imageHeight - clarafaiFace.bottom_row * imageHeight + (offsetY - padding)\n      };\n    };\n\n    this.displayFaceBox = response => {\n      const numberOfFaces = this.calculateNumberOfFaces(response);\n      var boxes = [];\n      var i;\n\n      for (i = 0; i < numberOfFaces; i++) {\n        const box = this.calculateFaceLocation(response, i);\n        boxes.push(box); //console.log(boxes);\n      }\n\n      this.setState({\n        boxes: boxes\n      });\n    };\n\n    this.onPictureSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        fetch('http://localhost:3000/image', {\n          method: 'put',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            id: this.state.user.id\n          })\n        }).then(res => res.json()).then(count => {\n          this.setState(Object.assign(this.state.user, {\n            entries: count\n          }));\n          console.log('User stats: ', this.state.user);\n        });\n        this.displayFaceBox(response);\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === \"home\") {\n        // Sign in state validation\n        this.setState({\n          isSignedIn: true\n        });\n      } else {\n        this.setState(initialState);\n      } // Change Routes\n\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      bgImageLoaded: false,\n      route: 'register',\n      isSignedIn: false,\n      input: '',\n      imageUrl: '',\n      boxes: [],\n      faces: 0,\n      user: {\n        id: 0,\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        joined: '',\n        entries: 0\n      }\n    };\n  } // -- UPDATE USER DETAILS\n\n\n  render() {\n    const HomePageStyle = {\n      padding: \"0 50px 60px 50px\",\n      minHeight: \"100vh\",\n      background: \"rgba(19, 19, 19, 0.7)\"\n    };\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(Container, {\n      fluid: \"true\",\n      style: {\n        margin: 0,\n        padding: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Navigation, {\n      onRouteChange: this.onRouteChange,\n      isSignedIn: this.state.isSignedIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: 0,\n        left: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: bgImg,\n      alt: \"\",\n      className: \"background-img\",\n      onLoad: this.onImageLoad,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    })), this.state.bgImageLoaded ? this.state.route === 'home' ? React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: HomePageStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(UserScore, {\n      name: this.state.user.name,\n      faces: this.state.faces,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(UserStats, {\n      userEntries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onPictureSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    })), React.createElement(Col, {\n      id: \"image-container\",\n      style: {\n        alignItems: \"center\"\n      },\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"inputImage\",\n      className: \"image-received\",\n      alt: \"\",\n      src: this.state.imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), this.state.boxes.map((box, index) => {\n      return React.createElement(FaceRecognition, {\n        box: box,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      });\n    }))))) : this.state.route === 'signin' ? React.createElement(SignIn, {\n      onRouteChange: this.onRouteChange,\n      loadUser: this.loadUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      onRouteChange: this.onRouteChange,\n      loadUser: this.loadUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }) : React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/subhronilsaha/Desktop/face-detect/src/App.js"],"names":["React","Clarifai","Container","Row","Col","Navigation","SignIn","Register","UserScore","ImageLinkForm","UserStats","FaceRecognition","bgImg","Loader","app","App","apiKey","initialState","bgImageLoaded","route","isSignedIn","input","imageUrl","boxes","faces","user","id","name","email","password","joined","entries","Component","constructor","loadUser","userData","setState","console","log","state","onImageLoad","onInputChange","event","target","value","calculateNumberOfFaces","data","numberOfFaces","outputs","regions","length","calculateFaceLocation","index","clarafaiFace","region_info","bounding_box","image","document","getElementById","imageContainer","imageWidth","Number","width","imageHeight","height","containerWidth","clientWidth","containerHeight","clientHeight","offsetX","offsetY","padding","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","response","i","box","push","onPictureSubmit","models","predict","FACE_DETECT_MODEL","then","fetch","method","headers","body","JSON","stringify","res","json","count","Object","assign","catch","err","onRouteChange","render","HomePageStyle","minHeight","background","margin","position","top","left","alignItems","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Clarifai from 'clarifai';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Navigation from './Components/Navigation';\nimport SignIn from './Components/Sign In/SignIn';\nimport Register from './Components/Register/Register';\nimport UserScore from './Components/UserScore';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport UserStats from './Components/UserStats';\nimport FaceRecognition from './Components/Face Recognition/FaceRecognition';\nimport bgImg from './assets/bg-img.jpg';\nimport Loader from './Components/Loader';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nconst app = new Clarifai.App({ // Clarifai App\n  apiKey: 'edde4e65d57d4ae5b35aeab79b52cfb1'\n});\n\nconst initialState = {\n      bgImageLoaded: true,\n      route: 'register', \n      isSignedIn: false,\n      input: '',\n      imageUrl: '',\n      boxes: [], \n      faces: 0, \n      user: {\n        id: 0,\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        joined: '',\n        entries: 0\n      }\n}\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      bgImageLoaded: false,\n      route: 'register', \n      isSignedIn: false,\n      input: '',\n      imageUrl: '',\n      boxes: [], \n      faces: 0, \n      user: {\n        id: 0,\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        joined: '',\n        entries: 0\n      }\n    }\n  }\n\n  // -- UPDATE USER DETAILS\n  loadUser = userData => {\n    this.setState({ user: {\n      id: userData.id,\n      name: userData.name,\n      email: userData.email,\n      joined: userData.joined,\n      entries: userData.entries\n    }});\n\n    console.log('Current User:', this.state.user);\n  }\n\n  // -- BACKGROUND IMAGE LOADER FUNCTION\n  onImageLoad = () => {\n    this.setState({ bgImageLoaded: true });\n  }\n\n  // -- IMAGE LINK UPDATE\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  }\n\n  // -- FACE RECOGNITION FUNCTIONS\n  calculateNumberOfFaces = (data) => {\n    const numberOfFaces = data.outputs[0].data.regions.length;\n    this.setState({ faces: numberOfFaces}); //console.log(numberOfFaces);\n    return numberOfFaces;\n  }\n\n  calculateFaceLocation = (data, index) => {\n    const clarafaiFace = data.outputs[0].data.regions[index].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const imageContainer = document.getElementById('image-container');\n    const imageWidth = Number(image.width);\n    const imageHeight = Number(image.height); \n    const containerWidth = Number(imageContainer.clientWidth);\n    const containerHeight = Number(imageContainer.clientHeight);\n    const offsetX = containerWidth - imageWidth;\n    const offsetY = containerHeight - imageHeight; \n    const padding = 15;  \n\n    console.log(imageHeight, containerHeight,imageWidth, containerWidth);\n\n    return {\n      leftCol: clarafaiFace.left_col * imageWidth + padding,\n      topRow: clarafaiFace.top_row * imageHeight,\n      rightCol: (imageWidth - (clarafaiFace.right_col * imageWidth)) + (offsetX - padding),\n      bottomRow: (imageHeight - (clarafaiFace.bottom_row * imageHeight)) + (offsetY - padding)\n    }\n  }\n\n  displayFaceBox = response => {\n    const numberOfFaces = this.calculateNumberOfFaces(response);\n    var boxes = [];\n\n    var i;\n    for(i = 0; i < numberOfFaces; i++) {\n      const box = this.calculateFaceLocation(response, i);\n      boxes.push(box); //console.log(boxes);\n    }\n\n    this.setState({ boxes: boxes });\n  }\n\n  onPictureSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n\n    app.models\n      .predict(\n        Clarifai.FACE_DETECT_MODEL, \n        this.state.input\n      )\n      .then(response => { \n        fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                id: this.state.user.id\n            })\n        })\n          .then(res => res.json())\n          .then(count => {\n            this.setState(Object.assign(this.state.user, {entries: count}));\n            console.log('User stats: ',this.state.user );\n          })\n\n        this.displayFaceBox(response)\n      })\n      .catch((err) => console.log(err));  \n  }\n\n  // -- ROUTE CHANGE FUNCTION\n  onRouteChange = (route) => {\n    if (route === \"home\") { // Sign in state validation\n      this.setState({ isSignedIn: true });      \n    }\n    else {\n      this.setState( initialState );\n    }\n\n    // Change Routes\n    this.setState({ route: route });\n  }\n\n  render() {\n    const HomePageStyle = { \n      padding: \"0 50px 60px 50px\",\n      minHeight: \"100vh\",\n      background: \"rgba(19, 19, 19, 0.7)\" \n    }\n\n    return (\n      <div className=\"App\">\n        <Container fluid=\"true\" style={{margin: 0, padding: 0}}>\n          <Navigation onRouteChange={this.onRouteChange} isSignedIn={this.state.isSignedIn} />\n\n          <div style={{position: \"absolute\", top: 0, left: 0}}>\n            <img \n              src={bgImg} \n              alt=\"\" \n              className=\"background-img\" \n              onLoad= {this.onImageLoad}\n            />\n          </div>\n\n          {this.state.bgImageLoaded\n            ? (this.state.route === 'home' \n                ? <Container> \n                  <Row style={HomePageStyle}>\n                    <Col xs={12} sm={6}>\n                      <UserScore \n                        name={ this.state.user.name }\n                        faces={ this.state.faces } \n                      />\n                      <UserStats \n                        userEntries = { this.state.user.entries }\n                      />\n                      <ImageLinkForm \n                        onInputChange={ this.onInputChange } \n                        onButtonSubmit={ this.onPictureSubmit }\n                      />\n                    </Col>\n\n                    <Col id=\"image-container\" style={{ alignItems: \"center\" }} xs={12} sm={6}>\n                      <div>\n                        <img \n                          id=\"inputImage\" \n                          className=\"image-received\"\n                          alt='' src={this.state.imageUrl}\n                        />\n                        {this.state.boxes.map((box, index) => {\n                          return (\n                            <FaceRecognition \n                              box={box} \n                              key={index}\n                            /> \n                          )\n                        })}\n                      </div>\n                    </Col>\n                  </Row>\n                </Container>\n\n              : (this.state.route === 'signin' \n                  ? <SignIn \n                      onRouteChange={ this.onRouteChange } \n                      loadUser= { this.loadUser }\n                    />\n                  : <Register \n                      onRouteChange={ this.onRouteChange } \n                      loadUser= { this.loadUser }\n                    />)\n              )\n            : <Loader /> \n          }\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}