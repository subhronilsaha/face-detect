{"ast":null,"code":"var _jsxFileName = \"/Users/subhronilsaha/Downloads/face-recognizer-react-master/src/App.js\";\nimport React from 'react';\nimport Clarifai from 'clarifai';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Navigation from './Components/Navigation';\nimport SignIn from './Components/Sign In/SignIn';\nimport Register from './Components/Register/Register';\nimport UserScore from './Components/UserScore';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './Components/Face Recognition/FaceRecognition';\nimport bgImg from './assets/bg-img.jpg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: 'edde4e65d57d4ae5b35aeab79b52cfb1'\n});\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.calculateNumberOfFaces = data => {\n      const numberOfFaces = data.outputs[0].data.regions.length;\n      this.setState({\n        faces: numberOfFaces\n      });\n      console.log(numberOfFaces);\n      return numberOfFaces;\n    };\n\n    this.calculateFaceLocation = (data, index) => {\n      const clarafaiFace = data.outputs[0].data.regions[index].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const imageWidth = Number(image.width);\n      const imageHeight = Number(image.height);\n      console.log(imageHeight, imageWidth);\n      return {\n        leftCol: clarafaiFace.left_col * imageWidth,\n        topRow: clarafaiFace.top_row * imageHeight,\n        rightCol: imageWidth - clarafaiFace.right_col * imageWidth,\n        bottomRow: imageHeight - clarafaiFace.bottom_row * imageHeight\n      };\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        const numberOfFaces = this.calculateNumberOfFaces(response);\n        var boxes = [];\n        var i;\n\n        for (i = 0; i < numberOfFaces; i++) {\n          const box = this.calculateFaceLocation(response, i);\n          boxes.push(box);\n          console.log(boxes);\n        }\n\n        this.setState({\n          boxes: boxes\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      this.setState({\n        route: route\n      });\n    };\n\n    this.onNameSubmit = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      boxes: [],\n      route: 'signin',\n      faces: 0,\n      name: ''\n    };\n  }\n\n  render() {\n    const HomePageStyle = {\n      padding: \"0 50px\",\n      height: \"100vh\",\n      background: \"rgba(19, 19, 19, 0.7)\"\n    };\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Container, {\n      fluid: \"true\",\n      style: {\n        margin: 0,\n        padding: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Navigation, {\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        height: \"100vh\",\n        overflow: \"hidden\",\n        pos\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: bgImg,\n      alt: \"\",\n      className: \"background-img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), this.state.route === 'home' ? React.createElement(Row, {\n      style: HomePageStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(UserScore, {\n      name: this.state.name,\n      faces: this.state.faces,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })), React.createElement(Col, {\n      style: {\n        alignItems: \"center\"\n      },\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"inputImage\",\n      className: \"mt-5 image-received\",\n      alt: \"\",\n      src: this.state.imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), this.state.boxes.map((box, index) => {\n      return React.createElement(FaceRecognition, {\n        box: box,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      });\n    })))) : this.state.route === 'signin' ? React.createElement(SignIn, {\n      onRouteChange: this.onRouteChange,\n      onNameSubmit: this.onNameSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      onRouteChange: this.onRouteChange // onNameSubmit={ this.onNameSubmit } \n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/subhronilsaha/Downloads/face-recognizer-react-master/src/App.js"],"names":["React","Clarifai","Container","Row","Col","Navigation","SignIn","Register","UserScore","ImageLinkForm","FaceRecognition","bgImg","app","App","apiKey","Component","constructor","onInputChange","event","setState","input","target","value","calculateNumberOfFaces","data","numberOfFaces","outputs","regions","length","faces","console","log","calculateFaceLocation","index","clarafaiFace","region_info","bounding_box","image","document","getElementById","imageWidth","Number","width","imageHeight","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","boxes","i","box","push","catch","err","onRouteChange","route","onNameSubmit","name","render","HomePageStyle","padding","background","margin","overflow","pos","alignItems","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Clarifai from 'clarifai';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Navigation from './Components/Navigation';\nimport SignIn from './Components/Sign In/SignIn';\nimport Register from './Components/Register/Register';\nimport UserScore from './Components/UserScore';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './Components/Face Recognition/FaceRecognition';\nimport bgImg from './assets/bg-img.jpg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nconst app = new Clarifai.App({\n  apiKey: 'edde4e65d57d4ae5b35aeab79b52cfb1'\n});\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      boxes: [], \n      route: 'signin', \n      faces: 0, \n      name: ''\n    }\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  calculateNumberOfFaces = (data) => {\n    const numberOfFaces = data.outputs[0].data.regions.length;\n    this.setState({ faces: numberOfFaces });\n    console.log(numberOfFaces);\n    return numberOfFaces;\n  }\n\n  calculateFaceLocation = (data, index) => {\n    const clarafaiFace = data.outputs[0].data.regions[index].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const imageWidth = Number(image.width);\n    const imageHeight = Number(image.height);\n    console.log(imageHeight, imageWidth);\n\n    return {\n      leftCol: clarafaiFace.left_col * imageWidth,\n      topRow: clarafaiFace.top_row * imageHeight,\n      rightCol: imageWidth - (clarafaiFace.right_col * imageWidth),\n      bottomRow: imageHeight - (clarafaiFace.bottom_row * imageHeight)\n    }\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input})\n    app.models\n      .predict(\n        Clarifai.FACE_DETECT_MODEL, \n        this.state.input\n      )\n      .then(response => {\n        const numberOfFaces = this.calculateNumberOfFaces(response);\n        var boxes = [];\n        var i;\n        for(i = 0; i<numberOfFaces; i++) {\n          const box = this.calculateFaceLocation(response, i);\n          boxes.push(box);\n          console.log(boxes);\n        }\n        this.setState({ boxes: boxes });\n      })\n      .catch((err) => console.log(err));  \n  }\n\n  onRouteChange = (route) => {\n    this.setState({ route: route });\n  }\n\n  onNameSubmit = (event) => {\n    this.setState({ name: event.target.value });\n  }\n\n  render() {\n    const HomePageStyle = { \n      padding: \"0 50px\",\n      height: \"100vh\",\n      background: \"rgba(19, 19, 19, 0.7)\" \n    }\n\n    return (\n      <div className=\"App\">\n        <Container fluid=\"true\" style={{margin: 0, padding: 0}}>\n          <Navigation onRouteChange={this.onRouteChange} />\n          <div style={{height: \"100vh\", overflow: \"hidden\", pos}}>\n            <img src={bgImg} alt=\"\" className=\"background-img\" />\n          </div>\n\n          { this.state.route === 'home' \n            ? <Row style={HomePageStyle}>\n                <Col xs={12} sm={6}>\n                  <UserScore \n                    name={ this.state.name }\n                    faces={ this.state.faces } \n                  />\n                  <ImageLinkForm \n                    onInputChange={ this.onInputChange } \n                    onButtonSubmit={ this.onButtonSubmit } \n                  />\n                </Col>\n                <Col style={{ alignItems: \"center\" }} xs={12} sm={6}>\n                  <div> \n                    <img id=\"inputImage\" className=\"mt-5 image-received\" alt='' src={this.state.imageUrl}/>\n                    {this.state.boxes.map((box, index) => {\n                      return (\n                        <FaceRecognition \n                          box={box} \n                          key={index}\n                        /> \n                      )\n                    })}\n                  </div>  \n                </Col>\n              </Row>\n            : (this.state.route === 'signin' \n                ? <SignIn \n                    onRouteChange={ this.onRouteChange } \n                    onNameSubmit={ this.onNameSubmit } \n                  />\n                : <Register \n                    onRouteChange={ this.onRouteChange } \n                    // onNameSubmit={ this.onNameSubmit } \n                  />)\n          }\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}