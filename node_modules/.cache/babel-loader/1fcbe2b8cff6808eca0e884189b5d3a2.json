{"ast":null,"code":"var _jsxFileName = \"/Users/subhronilsaha/Desktop/face-detect/src/App.js\";\nimport React from 'react';\nimport Clarifai from 'clarifai';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Navigation from './Components/Navigation';\nimport SignIn from './Components/Sign In/SignIn';\nimport Register from './Components/Register/Register';\nimport UserScore from './Components/UserScore';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './Components/Face Recognition/FaceRecognition';\nimport bgImg from './assets/bg-img.jpg';\nimport Loader from './Components/Loader';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nconst app = new Clarifai.App({\n  // Clarifai App\n  apiKey: 'edde4e65d57d4ae5b35aeab79b52cfb1'\n});\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.loadUser = userData => {\n      this.setState({\n        user: {\n          id: userData.id,\n          name: userData.name,\n          email: userData.email,\n          password: userData.password,\n          joined: userData.joined,\n          entries: 0\n        }\n      });\n      console.log('Current User:', this.state.user);\n    };\n\n    this.onImageLoad = () => {\n      this.setState({\n        bgImageLoaded: true\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.calculateNumberOfFaces = data => {\n      const numberOfFaces = data.outputs[0].data.regions.length;\n      this.setState({\n        faces: numberOfFaces\n      }); //console.log(numberOfFaces);\n\n      return numberOfFaces;\n    };\n\n    this.calculateFaceLocation = (data, index) => {\n      const clarafaiFace = data.outputs[0].data.regions[index].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const imageWidth = Number(image.width);\n      const imageHeight = Number(image.height);\n      console.log(imageHeight, imageWidth);\n      return {\n        leftCol: clarafaiFace.left_col * imageWidth,\n        topRow: clarafaiFace.top_row * imageHeight,\n        rightCol: imageWidth - clarafaiFace.right_col * imageWidth,\n        bottomRow: imageHeight - clarafaiFace.bottom_row * imageHeight\n      };\n    };\n\n    this.displayFaceBox = response => {\n      const numberOfFaces = this.calculateNumberOfFaces(response);\n      var boxes = [];\n      var i;\n\n      for (i = 0; i < numberOfFaces; i++) {\n        const box = this.calculateFaceLocation(response, i);\n        boxes.push(box);\n        console.log(boxes);\n      }\n\n      this.setState({\n        boxes: boxes\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        fetch('http://localhost:3000/image', {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: signInName,\n            email: signInEmail,\n            password: signInPassword\n          })\n        }).then(res => res.json()).then(user => {\n          if (user) {\n            loadUser(user);\n            onRouteChange('home');\n          }\n        });\n        this.displayFaceBox(response);\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === \"home\") {\n        this.setState({\n          isSignedIn: true\n        });\n      } else {\n        this.setState({\n          isSignedIn: false\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      boxes: [],\n      route: 'register',\n      faces: 0,\n      bgImageLoaded: false,\n      user: {\n        id: 0,\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        joined: '',\n        entries: 0\n      }\n    };\n  } // -- UPDATE USER DETAILS\n\n\n  render() {\n    const HomePageStyle = {\n      padding: \"0 50px 60px 50px\",\n      minHeight: \"100vh\",\n      background: \"rgba(19, 19, 19, 0.7)\"\n    };\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(Container, {\n      fluid: \"true\",\n      style: {\n        margin: 0,\n        padding: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Navigation, {\n      onRouteChange: this.onRouteChange,\n      isSignedIn: this.state.isSignedIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: 0,\n        left: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: bgImg,\n      alt: \"\",\n      className: \"background-img\",\n      onLoad: this.onImageLoad.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    })), this.state.bgImageLoaded ? this.state.route === 'home' ? React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: HomePageStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(UserScore, {\n      name: this.state.user.name,\n      faces: this.state.faces,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    })), React.createElement(Col, {\n      style: {\n        alignItems: \"center\"\n      },\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"inputImage\",\n      className: \"image-received\",\n      alt: \"\",\n      src: this.state.imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), this.state.boxes.map((box, index) => {\n      return React.createElement(FaceRecognition, {\n        box: box,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      });\n    }))))) : this.state.route === 'signin' ? React.createElement(SignIn, {\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      onRouteChange: this.onRouteChange,\n      onNameSubmit: this.onNameSubmit,\n      loadUser: this.loadUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }) : React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/subhronilsaha/Desktop/face-detect/src/App.js"],"names":["React","Clarifai","Container","Row","Col","Navigation","SignIn","Register","UserScore","ImageLinkForm","FaceRecognition","bgImg","Loader","app","App","apiKey","Component","constructor","loadUser","userData","setState","user","id","name","email","password","joined","entries","console","log","state","onImageLoad","bgImageLoaded","onInputChange","event","input","target","value","calculateNumberOfFaces","data","numberOfFaces","outputs","regions","length","faces","calculateFaceLocation","index","clarafaiFace","region_info","bounding_box","image","document","getElementById","imageWidth","Number","width","imageHeight","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","response","boxes","i","box","push","onButtonSubmit","imageUrl","models","predict","FACE_DETECT_MODEL","then","fetch","method","headers","body","JSON","stringify","signInName","signInEmail","signInPassword","res","json","onRouteChange","catch","err","route","isSignedIn","render","HomePageStyle","padding","minHeight","background","margin","position","top","left","bind","alignItems","map","onNameSubmit"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Clarifai from 'clarifai';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Navigation from './Components/Navigation';\nimport SignIn from './Components/Sign In/SignIn';\nimport Register from './Components/Register/Register';\nimport UserScore from './Components/UserScore';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './Components/Face Recognition/FaceRecognition';\nimport bgImg from './assets/bg-img.jpg';\nimport Loader from './Components/Loader';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nconst app = new Clarifai.App({ // Clarifai App\n  apiKey: 'edde4e65d57d4ae5b35aeab79b52cfb1'\n});\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      boxes: [], \n      route: 'register', \n      faces: 0, \n      bgImageLoaded: false,\n      user: {\n        id: 0,\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        joined: '',\n        entries: 0\n      }\n    }\n  }\n\n  // -- UPDATE USER DETAILS\n  loadUser = userData => {\n    this.setState({user: {\n      id: userData.id,\n      name: userData.name,\n      email: userData.email,\n      password: userData.password,\n      joined: userData.joined,\n      entries: 0\n    }});\n\n    console.log('Current User:', this.state.user);\n  }\n\n  // -- BACKGROUND IMAGE LOADER FUNCTION\n  onImageLoad = () => {\n    this.setState({bgImageLoaded: true});\n  }\n\n  // -- IMAGE LINK UPDATE\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  // -- FACE RECOGNITION FUNCTIONS\n  calculateNumberOfFaces = (data) => {\n    const numberOfFaces = data.outputs[0].data.regions.length;\n    this.setState({ faces: numberOfFaces }); //console.log(numberOfFaces);\n    return numberOfFaces;\n  }\n\n  calculateFaceLocation = (data, index) => {\n    const clarafaiFace = data.outputs[0].data.regions[index].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const imageWidth = Number(image.width);\n    const imageHeight = Number(image.height);\n    console.log(imageHeight, imageWidth);\n\n    return {\n      leftCol: clarafaiFace.left_col * imageWidth,\n      topRow: clarafaiFace.top_row * imageHeight,\n      rightCol: imageWidth - (clarafaiFace.right_col * imageWidth),\n      bottomRow: imageHeight - (clarafaiFace.bottom_row * imageHeight)\n    }\n  }\n\n  displayFaceBox = response => {\n    const numberOfFaces = this.calculateNumberOfFaces(response);\n    var boxes = [];\n\n    var i;\n    for(i = 0; i<numberOfFaces; i++) {\n      const box = this.calculateFaceLocation(response, i);\n      boxes.push(box);\n      console.log(boxes);\n    }\n\n    this.setState({ boxes: boxes });\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n\n    app.models\n      .predict(\n        Clarifai.FACE_DETECT_MODEL, \n        this.state.input\n      )\n      .then(response => { \n        fetch('http://localhost:3000/image', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                name: signInName,\n                email: signInEmail,\n                password: signInPassword,\n            })\n        })\n            .then(res => res.json())\n            .then(user => {\n                if (user) {\n                    loadUser(user);\n                    onRouteChange('home');\n                }\n            })\n\n        this.displayFaceBox(response)\n      })\n      .catch((err) => console.log(err));  \n  }\n\n  // -- ROUTE CHANGE FUNCTION\n  onRouteChange = (route) => {\n    if (route === \"home\") {\n      this.setState({isSignedIn: true}); \n    }\n    else {\n      this.setState({isSignedIn: false});\n    }\n\n    this.setState({ route: route });\n  }\n\n  render() {\n    const HomePageStyle = { \n      padding: \"0 50px 60px 50px\",\n      minHeight: \"100vh\",\n      background: \"rgba(19, 19, 19, 0.7)\" \n    }\n\n    return (\n      <div className=\"App\">\n        <Container fluid=\"true\" style={{margin: 0, padding: 0}}>\n          <Navigation onRouteChange={this.onRouteChange} isSignedIn={this.state.isSignedIn} />\n\n          <div style={{position: \"absolute\", top: 0, left: 0}}>\n            <img \n              src={bgImg} \n              alt=\"\" \n              className=\"background-img\" \n              onLoad= {this.onImageLoad.bind(this)}\n            />\n          </div>\n\n          {this.state.bgImageLoaded\n            ? (this.state.route === 'home' \n                ? <Container> \n                  <Row style={HomePageStyle}>\n                    <Col xs={12} sm={6}>\n                      <UserScore \n                        name={ this.state.user.name }\n                        faces={ this.state.faces } \n                      />\n                      <ImageLinkForm \n                        onInputChange={ this.onInputChange } \n                        onButtonSubmit={ this.onButtonSubmit }\n                      />\n                    </Col>\n\n                    <Col style={{ alignItems: \"center\" }} xs={12} sm={6}>\n                      <div>\n                        <img \n                          id=\"inputImage\" \n                          className=\"image-received\"\n                          alt='' src={this.state.imageUrl}\n                        />\n                        {this.state.boxes.map((box, index) => {\n                          return (\n                            <FaceRecognition \n                              box={box} \n                              key={index}\n                            /> \n                          )\n                        })}\n                      </div>\n                    </Col>\n                  </Row>\n                </Container>\n\n              : (this.state.route === 'signin' \n                  ? <SignIn \n                      onRouteChange={ this.onRouteChange } \n                    />\n                  : <Register \n                      onRouteChange={ this.onRouteChange } \n                      onNameSubmit={ this.onNameSubmit } \n                      loadUser= { this.loadUser }\n                    />)\n              )\n            : <Loader /> \n          }\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}